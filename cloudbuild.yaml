steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/calendar-sync:$COMMIT_SHA', '.']
  
  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/calendar-sync:$COMMIT_SHA']
  
  # Deploy container image to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'calendar-sync'
      - '--image'
      - 'gcr.io/$PROJECT_ID/calendar-sync:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '1Gi'
      - '--cpu'
      - '1'
      - '--timeout'
      - '300'
      - '--concurrency'
      - '80'
      - '--max-instances'
      - '10'
      - '--port'
      - '5000'
      - '--set-env-vars'
      - '^||^SEND_EMAIL=$_SEND_EMAIL,SMTP_SERVER=$_SMTP_SERVER,SMTP_PORT=$_SMTP_PORT,SMTP_USERNAME=$_SMTP_USERNAME,SMTP_PASSWORD=$_SMTP_PASSWORD,FROM_EMAIL=$_FROM_EMAIL,TO_EMAIL=$_TO_EMAIL,LOG_LEVEL=$_LOG_LEVEL,TIMEZONE=$_TIMEZONE,SPREADSHEET_ID=$_SPREADSHEET_ID,FLASK_SECRET_KEY=$_FLASK_SECRET_KEY,GOOGLE_CLIENT_ID=$_GOOGLE_CLIENT_ID,GOOGLE_CLIENT_SECRET=$_GOOGLE_CLIENT_SECRET'

  # Update Cloud Scheduler job with new service URL
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        SERVICE_URL=$(gcloud run services describe calendar-sync --region=us-central1 --format="value(status.url)")
        gcloud scheduler jobs update http calendar-sync-job \
          --uri="$SERVICE_URL/trigger-sync" \
          --location=us-central1 \
          --quiet || \
        gcloud scheduler jobs create http calendar-sync-job \
          --schedule="0 * * * *" \
          --uri="$SERVICE_URL/trigger-sync" \
          --http-method=POST \
          --headers="Content-Type=application/json" \
          --location=us-central1 \
          --description="Hourly calendar sync job" \
          --time-zone="America/Los_Angeles" \
          --attempt-deadline=300s

# Store images in Google Container Registry
images:
  - 'gcr.io/$PROJECT_ID/calendar-sync:$COMMIT_SHA'

# Build configuration
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

# Timeout for the entire build
timeout: '1200s'

# Available substitutions
substitutions:
  _SPREADSHEET_ID: ''
  _FLASK_SECRET_KEY: ''
  _GOOGLE_CLIENT_ID: ''
  _GOOGLE_CLIENT_SECRET: ''
  _SEND_EMAIL: 'true'
  _SMTP_SERVER: 'smtp.gmail.com'
  _SMTP_PORT: '587'
  _SMTP_USERNAME: ''
  _SMTP_PASSWORD: ''
  _FROM_EMAIL: ''
  _TO_EMAIL: ''
  _LOG_LEVEL: 'INFO'
  _TIMEZONE: 'America/Los_Angeles'

# Notifications configuration
notifications:
  - notifier: 'projects/YOUR_PROJECT_ID/locations/us-central1/notifiers/YOUR_NOTIFIER_NAME'
    filter: 'build.status == "SUCCESS" || build.status == "FAILURE"'
    delivery:
      template:
        type: 'inline'
        body: |
          Build ${build.id} finished with status: ${build.status}
          
          Logs: ${build.logUrl}
          
          Summary:
          - Trigger: ${build.substitutions.TRIGGER_NAME}
          - Commit: ${build.substitutions.SHORT_SHA}
          - Branch: ${build.substitutions.BRANCH_NAME}
          - Repo: ${build.substitutions.REPO_NAME}
          
          Steps:
          % for step in build.steps %
          - ${step.name}: ${step.status}
          % endfor %
 